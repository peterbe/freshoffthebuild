{"version":3,"sources":["App.js","serviceWorker.js","index.js"],"names":["DEFAULT_SOURCE","process","REACT_APP_DEFAULT_SOURCE","DEFAULT_FREQUENCY","parseInt","REACT_APP_DEFAULT_FREQUENCY","DEFAULT_FREQUENCY_UNIT","REACT_APP_DEFAULT_FREQUENCY_UNIT","searchParams","URLSearchParams","window","location","search","defaultSource","get","startsWith","concat","URL","ex","msg","toString","alert","Error","defaultFrequency","defaultFrequencyUnit","setLastResult","result","source","cacheKey","localStorage","setItem","JSON","stringify","timestamp","Date","getTime","getItem","removeItem","App","state","frequency","frequencyUnit","loading","lastResult","lastresult","parse","getLastResultFromLocalStorage","lookups","serverError","getSeconds","seconds","_this","loop","_callee","regenerator_default","a","wrap","_context","prev","next","dismounted","abrupt","fetch","setState","start","setTimeout","stop","this","_callee2","url","response","json","_context2","pathname","aggs","products","filter","match_all","source.product","terms","field","size","source.product_count","cardinality","sort","download.date","highlight","fields","target.channel","target.version","target.locale","target.platform","build.id","ky","post","href","sent","ok","t0","console","warn","_this2","react_default","createElement","className","ShowServerError","error","App_ShowAggregates","aggregates","aggregations","App_ShowProgressBar","ShowLookups","style","textAlign","onClick","_ref3","Object","asyncToGenerator","mark","_callee4","event","_context4","preventDefault","_x","apply","arguments","action","type","name","defaultValue","placeholder","DisplayVersion","Component","React","memo","element","document","querySelector","data","assign","dataset","target","rel","commit","title","date","slice","_ref4","isResponseError","Response","status","_ref5","toLocaleString","ShowProgressBar","secondsLeft","percentage","_this3$props","_this3","props","total","done","Math","ceil","width","id","hours","trunc","minutes","showSecondsHuman","PureComponent","ShowAggregates","previous","_this4","initial","prevProps","nanoEqual","_this$props","packageProducts","buckets","map","bucket","key","count","doc_count","previousProducts","initialProducts","topMargin","innerHeight","lastProducts","lastResultTime","margin","ShowProducts","extraClassname","lib_default","_ref6","_ref6$extraClassname","product","Boolean","hostname","match","ReactDOM","render","src_App_0","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.bef0e5f6.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport ky from \"ky\";\nimport nanoEqual from \"nano-equal\";\nimport TimeAgo from \"react-timeago\";\nimport \"./App.scss\";\n\nconst DEFAULT_SOURCE =\n  process.env.REACT_APP_DEFAULT_SOURCE || \"https://buildhub.moz.tools/\";\nconst DEFAULT_FREQUENCY = parseInt(\n  process.env.REACT_APP_DEFAULT_FREQUENCY || 10,\n  10\n);\nconst DEFAULT_FREQUENCY_UNIT =\n  process.env.REACT_APP_DEFAULT_FREQUENCY_UNIT || \"minutes\";\n\nconst searchParams = new URLSearchParams(window.location.search);\nlet defaultSource = searchParams.get(\"s\") || DEFAULT_SOURCE;\nif (!defaultSource.startsWith(\"http\")) {\n  defaultSource = `https://${defaultSource}`;\n}\ntry {\n  new URL(defaultSource);\n} catch (ex) {\n  const msg = `The URL parameter is not valid! Try harder. (${ex.toString()})`;\n  alert(msg);\n  throw new Error(msg);\n}\nconst defaultFrequency = parseInt(\n  searchParams.get(\"f\") || DEFAULT_FREQUENCY,\n  10\n);\nconst defaultFrequencyUnit = searchParams.get(\"u\") || DEFAULT_FREQUENCY_UNIT;\n\nfunction getLastResultFromLocalStorage(source) {\n  const cacheKey = `lastresult-${source}`;\n  const lastresult = window.localStorage.getItem(cacheKey);\n  if (lastresult) {\n    return JSON.parse(lastresult);\n  }\n  return null;\n}\n\nfunction setLastResult(result, source) {\n  const cacheKey = `lastresult-${source}`;\n  window.localStorage.setItem(\n    cacheKey,\n    JSON.stringify({\n      result,\n      timestamp: new Date().getTime()\n    })\n  );\n}\n\n// Legacy fix. We used to store it in localStorage key called \"lastresult\".\n// Let's clean that up.\nif (window.localStorage.getItem(\"lastresult\")) {\n  window.localStorage.removeItem(\"lastresult\");\n}\n\nclass App extends Component {\n  state = {\n    source: defaultSource,\n    frequency: defaultFrequency,\n    frequencyUnit: defaultFrequencyUnit,\n    loading: true,\n    result: null,\n    lastResult: getLastResultFromLocalStorage(defaultSource),\n    lookups: 0,\n    serverError: null\n  };\n  async componentDidMount() {\n    this.loop();\n  }\n\n  componentWillUnmount() {\n    this.dismounted = true;\n  }\n\n  getSeconds = () => {\n    let seconds = this.state.frequency;\n    if (this.state.frequencyUnit === \"minutes\") {\n      seconds *= 60;\n    } else if (this.state.frequencyUnit === \"hours\") {\n      seconds *= 60 * 60;\n    }\n    return seconds;\n  };\n\n  loop = async () => {\n    if (this.dismounted) return;\n    await this.fetch();\n    const seconds = this.getSeconds();\n    this.setState({ start: new Date().getTime() });\n    window.setTimeout(this.loop, seconds * 1000);\n  };\n\n  fetch = async () => {\n    // Only if the \"source\" is just a domain, then add \"/api/search\".\n    // The smarts about doing this is that the user can enter\n    // 'http://example.com' or 'http://example.com/'.\n    let url = new URL(this.state.source);\n    if (!url.pathname || url.pathname === \"/\") {\n      url = new URL(\"/api/search\", this.state.source);\n    }\n\n    const search = {\n      aggs: {\n        products: {\n          filter: { match_all: {} },\n          aggs: {\n            \"source.product\": { terms: { field: \"source.product\", size: 50 } },\n            \"source.product_count\": { cardinality: { field: \"source.product\" } }\n          }\n        }\n      },\n      size: 0,\n      sort: [{ \"download.date\": \"desc\" }],\n      highlight: {\n        fields: {\n          \"source.product\": {},\n          \"target.channel\": {},\n          \"target.version\": {},\n          \"target.locale\": {},\n          \"target.platform\": {},\n          \"build.id\": {}\n        }\n      }\n    };\n    try {\n      const response = await ky.post(url.href, { json: search });\n      if (response.ok) {\n        const json = await response.json();\n        this.setState(\n          {\n            result: json,\n            lookups: this.state.lookups + 1,\n            serverError: null\n          },\n          () => {\n            setLastResult(this.state.result, this.state.source);\n          }\n        );\n      } else {\n        this.setState({\n          serverError: response,\n          lookups: this.state.lookups + 1\n        });\n      }\n    } catch (ex) {\n      console.warn(\"EXCEPTION:\", ex);\n      this.setState({\n        serverError: ex,\n        lookups: this.state.lookups + 1\n      });\n    }\n  };\n\n  render() {\n    return (\n      <div>\n        <section className=\"section\">\n          <div className=\"container\">\n            <header className=\"header\">\n              <h1 className=\"title is-3\">Fresh Off The Build</h1>\n              <p className=\"subtitle is-6\">\n                What's Most Recently Built in Mozilla TaskCluster.\n                <br />\n                Basically, keeping an eye on fresh data in Buildhub.\n              </p>\n            </header>\n            {this.state.serverError && (\n              <ShowServerError error={this.state.serverError} />\n            )}\n\n            {this.state.result && (\n              <ShowAggregates\n                aggregates={this.state.result.aggregations}\n                lastResult={this.state.lastResult}\n              />\n            )}\n\n            {this.state.start && (\n              <ShowProgressBar\n                seconds={this.getSeconds()}\n                start={this.state.start}\n              />\n            )}\n\n            {this.state.lookups > 0 ? (\n              <ShowLookups lookups={this.state.lookups} />\n            ) : (\n              <p style={{ textAlign: \"center\" }}>\n                <i>Lookups haven't start yet.</i>\n              </p>\n            )}\n            {this.state.start && (\n              <button\n                className=\"button is-small\"\n                onClick={async event => {\n                  event.preventDefault();\n                  this.setState({ start: new Date().getTime() });\n                  await this.fetch();\n                }}\n              >\n                Force Refresh Now\n              </button>\n            )}\n            <hr />\n            <form action=\".\">\n              <div className=\"field is-horizontal\">\n                <div className=\"field-label is-normal\">\n                  <label className=\"label\">Source</label>\n                </div>\n                <div className=\"field-body\">\n                  <div className=\"field\">\n                    <div className=\"control\">\n                      <input\n                        className=\"input\"\n                        type=\"url\"\n                        name=\"s\"\n                        defaultValue={this.state.source}\n                        placeholder={`Source URL e.g. ${DEFAULT_SOURCE}`}\n                      />\n                    </div>\n                  </div>\n                </div>\n              </div>\n\n              <div className=\"field is-horizontal\">\n                <div className=\"field-label is-normal\">\n                  <label className=\"label\">Update Frequency</label>\n                </div>\n\n                <div className=\"field-body\">\n                  <div className=\"field\">\n                    <div className=\"field has-addons\">\n                      <div className=\"control\">\n                        <input\n                          className=\"input\"\n                          type=\"number\"\n                          name=\"f\"\n                          defaultValue={this.state.frequency}\n                          placeholder={`Number of seconds between checks. E.g. ${DEFAULT_FREQUENCY}`}\n                        />{\" \"}\n                      </div>\n                      <p className=\"control\">\n                        <span className=\"select\">\n                          <select\n                            name=\"u\"\n                            defaultValue={this.state.frequencyUnit}\n                          >\n                            <option>seconds</option>\n                            <option>minutes</option>\n                            <option>hours</option>\n                          </select>\n                        </span>\n                      </p>\n                    </div>\n                  </div>\n                </div>\n              </div>\n              <div className=\"field is-horizontal\">\n                <div className=\"field-label\">\n                  {/* Left empty for spacing  */}\n                </div>\n                <div className=\"field-body\">\n                  <div className=\"control\">\n                    <button className=\"button is-primary\">\n                      Change Options\n                    </button>\n                  </div>\n                </div>\n              </div>\n            </form>\n          </div>\n        </section>\n        <footer className=\"footer\">\n          <div className=\"content has-text-centered is-small\">\n            <DisplayVersion />\n          </div>\n        </footer>\n      </div>\n    );\n  }\n}\n\nexport default App;\n\nconst DisplayVersion = React.memo(() => {\n  const element = document.querySelector(\"#_version\");\n  const data = Object.assign({}, element.dataset);\n  return (\n    <p className=\"version-info\">\n      <a\n        href=\"https://github.com/peterbe/freshoffthebuild\"\n        target=\"_blank\"\n        rel=\"noopener noreferrer\"\n      >\n        FreshOffTheBuild\n      </a>\n      <br />\n      Version{\" \"}\n      <a\n        href={`https://github.com/peterbe/freshoffthebuild/commit/${\n          data.commit\n        }`}\n        title={data.date}\n      >\n        {data.commit.slice(0, 7)}\n      </a>{\" \"}\n      {data.date}\n    </p>\n  );\n});\n\nfunction ShowServerError({ error }) {\n  const isResponseError = error instanceof window.Response;\n  return (\n    <article className=\"message is-danger\">\n      <div className=\"message-header\">\n        <p>{isResponseError ? \"Server Error\" : \"Network Error\"}</p>\n      </div>\n      <div className=\"message-body\">\n        {isResponseError ? (\n          <p>\n            <b>{error.status}</b> on <b>{error.url}</b>\n          </p>\n        ) : (\n          <code>{error.toString()}</code>\n        )}\n      </div>\n    </article>\n  );\n}\n\nfunction ShowLookups({ lookups }) {\n  return (\n    <p>\n      <small>\n        Number of lookups made: <b>{lookups.toLocaleString()}</b>\n      </small>\n    </p>\n  );\n}\n\nclass ShowProgressBar extends React.PureComponent {\n  state = {\n    secondsLeft: 0,\n    percentage: 0\n  };\n\n  componentDidMount() {\n    this.loop();\n  }\n\n  loop = () => {\n    const { start, seconds } = this.props;\n    const finish = start + seconds * 1000;\n    const total = finish - start;\n    const now = new Date().getTime();\n    const done = now - start;\n    const secondsLeft = Math.ceil((total - done) / 1000);\n    const percentage = Math.ceil((100 * done) / total);\n    this.setState({ secondsLeft, percentage });\n    window.setTimeout(this.loop, 1000);\n  };\n\n  componentDidUpdate() {\n    const element = document.querySelector(\"#progress\");\n    element.style.width = `${this.state.percentage}%`;\n  }\n\n  render() {\n    const { secondsLeft } = this.state;\n    return (\n      <div>\n        <div id=\"progress\">\n          <b />\n          <i />\n        </div>\n        <small>\n          Time until next check: <b>{showSecondsHuman(secondsLeft)}</b>\n        </small>\n      </div>\n    );\n  }\n}\n\nfunction showSecondsHuman(seconds) {\n  if (seconds > 3600) {\n    const hours = Math.trunc(seconds / 3600);\n    return `${hours} ${hours === 1 ? \"hour\" : \"hours\"}`;\n  } else if (seconds > 60) {\n    const minutes = Math.trunc(seconds / 60);\n    return `${minutes} ${minutes === 1 ? \"minute\" : \"minutes\"}`;\n  } else {\n    return `${seconds} ${seconds === 1 ? \"second\" : \"seconds\"}`;\n  }\n}\n\nclass ShowAggregates extends React.PureComponent {\n  state = { previous: this.props.aggregates, initial: this.props.aggregates };\n\n  componentDidUpdate(prevProps) {\n    if (!nanoEqual(prevProps.aggregates, this.props.aggregates)) {\n      this.setState({ previous: prevProps.aggregates });\n    }\n  }\n  render() {\n    const { aggregates, lastResult } = this.props;\n    function packageProducts(aggs) {\n      return aggs.products[\"source.product\"].buckets.map(bucket => {\n        return { name: bucket.key, count: bucket.doc_count };\n      });\n    }\n    const products = packageProducts(aggregates);\n    let previousProducts = null;\n    let initialProducts = null;\n    if (!nanoEqual(aggregates, this.state.previous)) {\n      previousProducts = packageProducts(this.state.previous);\n      if (!nanoEqual(this.state.previous, this.state.initial)) {\n        initialProducts = packageProducts(this.state.initial);\n      }\n    }\n    let topMargin = 50;\n    if (window.innerHeight > 1000) {\n      topMargin += 200;\n    }\n    if (previousProducts) {\n      topMargin -= 50;\n      if (initialProducts) {\n        topMargin -= 50;\n      }\n    }\n\n    let lastProducts = null;\n    let lastResultTime = null;\n    if (this.props.lastResult) {\n      if (\n        !nanoEqual(aggregates, lastResult.result.aggregations) &&\n        !nanoEqual(this.state.previous, lastResult.result.aggregations) &&\n        !nanoEqual(this.state.initial, lastResult.result.aggregations)\n      ) {\n        lastResultTime = lastResult.timestamp;\n        lastProducts = packageProducts(lastResult.result.aggregations);\n      }\n    }\n\n    return (\n      <div style={{ margin: `${topMargin}px 20px` }}>\n        {previousProducts && <p>Current:</p>}\n        <ShowProducts products={products} />\n        {previousProducts && <p>Before:</p>}\n        {previousProducts && (\n          <ShowProducts products={previousProducts} extraClassname=\"before\" />\n        )}\n        {initialProducts && <p>Initial:</p>}\n        {initialProducts && (\n          <ShowProducts products={initialProducts} extraClassname=\"initial\" />\n        )}\n        {lastResultTime && (\n          <p>\n            Last time you visited (<TimeAgo date={lastResultTime} />)\n          </p>\n        )}\n        {lastProducts && (\n          <ShowProducts products={lastProducts} extraClassname=\"last\" />\n        )}\n      </div>\n    );\n  }\n}\n\nfunction ShowProducts({ products, extraClassname = \" \" }) {\n  return (\n    <nav className={`level ${extraClassname}`}>\n      {products.map(product => (\n        <div className=\"level-item has-text-centered\" key={product.name}>\n          <div>\n            <p className=\"heading\">{product.name}</p>\n            <p className=\"title\">{product.count.toLocaleString()}</p>\n          </div>\n        </div>\n      ))}\n    </nav>\n  );\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.scss\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}